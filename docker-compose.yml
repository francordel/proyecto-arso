#Establecemos la version del docker-compose
version: '3.1'
#Declaramos los servicios que se van a gestionar desde doker compose
services:
  opiniones:
      build: ./opiniones-rest
      restart: always
      ports:
        - 5002:5000
      environment:
        URI_MONGODB: mongodb://root:example@mongo:27017/
  # Servicio que levanta una bbdd de mongo
  mongo:
    # Tipo de imagen que obtiene de los contenedores por defecto de docker hub, descargamos la ultima disponible
    image: mongo
    # El contenedor debe reiniciarse siempre que se detenga o falle.
    restart: always
    #Variables de entorno que establecen admin y contraseña
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    #Establecemos un volumen para que se persista en la maquina local para no perderlas
    volumes:
      - ./opiniones-rest/mongo-db:/data/db
  # Este servicio de Mongo Express permite acceder a una interfaz web para administrar MongoDB a través del puerto 8081 del host.
  mongo-express:
    # Tipo de imagen que obtiene de los contenedores por defecto de docker hub, descargamos la ultima disponible
    image: mongo-express
    restart: always
    #Mapeamos el acceso a mongo-express en el puerto 8081 de nuestra máquina
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  
  restaurantes:
    build: .
    ports:
      - 8080:8080
      
  pasarela:
    build: ./pasarela
    ports:
      - 8090:8090